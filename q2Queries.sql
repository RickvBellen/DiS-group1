SELECT 0;
SELECT distinct gpa.studentId FROM GPA, degrees_where_all_passed WHERE GPA.avgGrade > %1% and GPA.studentid = degrees_where_all_passed.StudentId and degrees_where_all_passed.degreeid = GPA.degreeid ORDER BY studentid;
SELECT active_students_per_degree.degreeid, AVG(case gender when 'F' then 1 else 0 end) as percentage FROM active_students_per_degree, students WHERE active_students_per_degree.studentid = students.studentid GROUP BY active_students_per_degree.DegreeId;
SELECT CAST(fem_in_dept.value AS float) / CAST(total_in_dept.value AS float) as percentage FROM fem_in_dept, total_in_dept WHERE fem_in_dept.dept = %1% and total_in_dept.dept = %1%;
SELECT courseid, AVG(case when grade>=%1% then 1 else 0 end) as percentagePassing FROM with_grade, CourseOffers WHERE with_grade.courseofferid = courseoffers.CourseOfferId GROUP BY courseid;
SELECT distinct studentid, count(studentid) as numberOfCoursesWhereExcellent FROM excellent_students_q6 GROUP BY studentid HAVING count(studentid) >= %1%;
SELECT active_students_per_degree.degreeid, birthyearstudent as birthyear, gender, avg(avgGrade) as avgGrade FROM students, GPA, active_students_per_degree WHERE students.studentid = active_students_per_degree.StudentId and GPA.studentid = students.StudentId GROUP BY cube(active_students_per_degree.degreeid, birthyearstudent, gender);
SELECT courseName, year, quartile FROM courses, courseoffers, student_assistant_count, student_count WHERE courseoffers.courseid = courses.courseid and student_assistant_count.courseofferid = courseoffers.CourseOfferId and student_count.courseofferid = courseoffers.CourseOfferId and student_assistant_count.value*50 < student_count.value ORDER BY courseoffers.CourseOfferId;